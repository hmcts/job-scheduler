server:
  port: 8484

management:
  security:
    enabled: ${MANAGEMENT_SECURITY_ENABLED:true}

idam:
  s2s-auth:
    useStub: false
    url: ${S2S_URL}
    secret: ${S2S_SECRET}
    microservice: jobscheduler

spring:
  application:
    name: Job Scheduler
  datasource:
    driverClassName: org.postgresql.Driver
    url: jdbc:postgresql://${JOB_SCHEDULER_DB_HOST:job-scheduler-database}:${JOB_SCHEDULER_DB_PORT:5432}/${JOB_SCHEDULER_DB_NAME:jobscheduler}${JOB_SCHEDULER_DB_CONNECTION_OPTIONS:}
    username: ${JOB_SCHEDULER_DB_USERNAME:jobscheduler}
    password: ${JOB_SCHEDULER_DB_PASSWORD:}
    properties:
      charSet: UTF-8
    # http://tomcat.apache.org/tomcat-7.0-doc/jdbc-pool.html#Common_Attributes
    tomcat:
      max-active: 10
      max-idle: 10
      min-idle: 2
      test-on-borrow: true
      validation-query: SELECT 1
      time-between-eviction-runs-millis: 10000
      test-while-idle: true
      test-on-return: true
      remove-abandoned: true
      remove-abandoned-timeout: 60
      abandon-when-percentage-full: 0

quartzProperties:
  org.quartz:
    scheduler:
      instanceId: AUTO
    dataSource:
      jobscheduler:
        driver: org.postgresql.Driver
        URL: ${spring.datasource.url}
        user: ${spring.datasource.username}
        password: ${spring.datasource.password}
    jobStore:
      isClustered: true
      class: org.quartz.impl.jdbcjobstore.JobStoreTX
      driverDelegateClass: org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
      dataSource: jobscheduler
    threadPool:
      class: org.quartz.simpl.SimpleThreadPool
      threadCount: 8

retryPolicy:
  maxNumberOfJobExecutions: ${MAX_NUMBER_OF_JOB_EXECUTIONS:5}
  delayBetweenAttemptsInMs: ${DELAY_BETWEEN_JOB_ATTEMPTS_MS:15000}
